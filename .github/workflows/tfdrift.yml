name: 'Drift Detection'

on:
    schedule:
        # runs this every hour
        - cron: '0 * * * *'
jobs:
    # this one checks for instance types
    detect_drift:
        uses: ./.github/workflows/tfplan.yml 
        permissions:
            contents: read
            id-token: write
            pull-requests: write
            issues: write
        secrets:
            ROLE_TO_ASSUME: ${{ secrets.ROLE_TO_ASSUME }}
            EXPECTED_ACCOUNT_ID: ${{ secrets.EXPECTED_ACCOUNT_ID }}
    
    analyze_drift:
      needs: detect_drift
      permissions:
        contents: read
        id-token: write
        issues: write
      runs-on: ubuntu-latest
      steps:
        - name: Download Terraform Plan
          uses: actions/download-artifact@v4
          with:
            name: terraform-plan
            path: /tmp
        
        - name: Analyze Plan
          id: analyze
          run: |
            PLAN_OUTPUT=$(cat /tmp/plan.json)

            if echo "$PLAN_OUTPUT" | grep -q '"resource_drift":'; then
              echo "DRIFT_DETECTED=true" >> $GITHUB_ENV

              DRIFT_DETAILS=$(echo "$PLAN_OUTPUT" | jq -r '.resource_drift[] | "- Resource: \(.address)\n  Action: \(.change.actions[0])\n  Details: Changed from \(.change.before.tags_all.Name) to \(.change.after.tags_all.Name)"')
              echo "DRIFT_DETAILS<<EOF" >> $GITHUB_ENV
              echo "$DRIFT_DETAILS" >> $GITHUB_ENV
              echo "EOF" >> $GITHUB_ENV
            else
              echo "DRIFT_DETECTED=false" >> $GITHUB_ENV
            fi

        - name: Create or Update Issue
          if: env.DRIFT_DETECTED == 'true'
          uses: actions/github-script@v7
          with:
              script: |
                const issueTitle = 'ðŸš¨ Infrastructure Drift Detected';
                const issueBody = `Infrastructure drift detected at ${new Date().toISOString()}

                The following resources have drifted from their Terraform-managed state:
                
                ${process.env.DRIFT_DETAILS}
                
                Please investigate these changes and:
                1. If the changes were intentional, update the Terraform configuration
                2. If the changes were unintentional, run Terraform apply to restore the desired state
                
                [View Workflow Run](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})`;
                
                // Search for existing open drift issues
                const issues = await github.rest.issues.listForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  state: 'open',
                  labels: ['drift-detected']
                });
                
                if (issues.data.length > 0) {
                  // Update existing issue
                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issues.data[0].number,
                    body: issueBody
                  });
                } else {
                  // Create new issue
                  await github.rest.issues.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: issueTitle,
                    body: issueBody,
                    labels: ['drift-detected', 'infrastructure']
                  });
                }