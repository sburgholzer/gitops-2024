name: 'Terraform Apply'

# on: workflow_dispatch
on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  id-token: write
  issues: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform Apply Flow'
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, 'apply') && 
      (github.event.comment.author_association == 'OWNER' || 
      github.event.comment.author_association == 'ADMIN')
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    
    env:
      TF_VAR_BACKEND_BUCKET: ${{ vars.BUCKET_NAME }}
      TF_VAR_BACKEND_KEY: ${{ vars.STATE_KEY }}
      TF_VAR_BACKEND_REGION: ${{ vars.REGION }}
      TF_VAR_BACKEND_DYNAMODB_TABLE: ${{ vars.DYNAMODB_NAME }}
      TF_VAR_instance_type: ${{ vars.INSTANCE_TYPE }}
      TF_VAR_region: ${{ vars.REGION }}
      TF_VAR_expected_region: ${{ vars.EXPECTED_REGION }}
      TF_VAR_expected_account_id: ${{ secrets.EXPECTED_ACCOUNT_ID }}
    
    steps:
      - name: Get PR Details
        uses: xt0rted/pull-request-comment-branch@v2
        id: comment-branch

      # Configure AWS Creds
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ vars.REGION }}
        
      # Checkout the repo
      - name: Checkout
        uses: actions/checkout@v4
      
      # Install latest version of terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      
      # run terraform init
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${TF_VAR_BACKEND_BUCKET}" \
            -backend-config="key=${TF_VAR_BACKEND_KEY}" \
            -backend-config="region=${TF_VAR_BACKEND_REGION}" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${TF_VAR_BACKEND_DYNAMODB_TABLE}"
      
      # while this was ran in the PR checks, going to add it here for a record of it in the apply as well
      - name: Terraform Plan
        run: terraform plan -input=false
      
      # Run Terraform Apply
      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve

      - name: Get Grafana IP
        if: success()
        id: grafana-ip
        run: |
          GRAFANA_IP=$(terraform output grafana_ip)
          echo "grafana_ip=${GRAFANA_IP}" >> $GITHUB_OUTPUT
        
      - name: Create Grafana IP Secret
        if: success()
        uses: gliech/create-github-secret-action@v1
        with:
          name: GRAFANA_IP
          value: ${{ steps.grafana-ip.outputs.grafana_ip }}
          pa_token: ${{ secrets.PAT }}
      
      - name: Comment on PR
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const success = '${{ job.status }}' === 'success';
            const body = `Terraform Apply: ${success ? '✅ Succeeded' : '❌ Failed'}
            Run details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });