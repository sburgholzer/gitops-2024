name: Lint
on:
  pull_request:
      branches:
        - staging
        - main
permissions:
    contents: read
    pull-requests: write
jobs:
  tflint:
    environment: ${{ github.base_ref == 'main' && 'production' || github.base_ref == 'staging' && 'staging' || 'staging' }}
    runs-on: ${{ matrix.os }}
    defaults:
        run:
            working-directory: ./terraform

    strategy:
      matrix:
        os: [ubuntu-latest]
    
    steps:
    - uses: actions/checkout@v4
      name: Checkout source code

    - uses: actions/cache@v4
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v4
      name: Setup TFLint
      with:
        tflint_version: v0.52.0

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Run TFLint
      id: tflint
      continue-on-error: true
      run: |
        OUTPUT=$(tflint -f json)
        TFLINT_EXIT_CODE=$?
        
        # Create message and save to output
        MESSAGE="### TFLint Analysis Results :mag:
  
        "
        ISSUES=$(echo "$OUTPUT" | jq -r '.issues | length')
        if [ $ISSUES -eq 0 ]; then
          MESSAGE+="✅ No issues found"
        else
          MESSAGE+="⚠️ Found $ISSUES issue(s)
  
          "
          MESSAGE+=$(echo "$OUTPUT" | jq -r '.issues[] | "- **\(.rule.name)** in `\(.range.filename)`:\n  - \(.message)\n  - Line: \(.range.start.line)"')
        fi
          
        # Store message and exit code
        echo "tflint_message<<EOF" >> $GITHUB_ENV
        echo "$MESSAGE" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "tflint_exit_code=$TFLINT_EXIT_CODE" >> $GITHUB_ENV
  

    - name: Find Comment
      uses: peter-evans/find-comment@v3
      id: comment_found
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'github-actions[bot]'
        body-includes: "TFLint Analysis Results"
        token: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Create or Update Comment
      uses: peter-evans/create-or-update-comment@v4
      with:
         token: ${{ secrets.GITHUB_TOKEN }}
         issue-number: ${{ github.event.pull_request.number }}
         comment-id: ${{ steps.comment_found.outputs.comment-id }}
         body: ${{ env.tflint_message }}
      
    - name: Final Status Check
      if: always()
      run: |
        if [ "${{ env.tflint_exit_code }}" != "0" ]; then
          exit 1
        fi