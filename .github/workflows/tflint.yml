name: Lint
on:
  pull_request:
      branches:
        - staging
        - main
permissions:
    contents: read
    pull-requests: write
jobs:
  tflint:
    environment: ${{ github.base_ref == 'main' && 'production' || github.base_ref == 'staging' && 'staging' || 'staging' }}
    runs-on: ${{ matrix.os }}
    defaults:
        run:
            working-directory: ./terraform

    strategy:
      matrix:
        os: [ubuntu-latest]
    
    steps:
    - uses: actions/checkout@v4
      name: Checkout source code

    - uses: actions/cache@v4
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v4
      name: Setup TFLint
      with:
        tflint_version: v0.52.0

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Run TFLint
      id: tflint
      continue-on-error: true
      run: |
        # Run TFLint and capture output
        OUTPUT=$(tflint -f json 2>&1)
        EXIT_CODE=$?
        
        # Format the message
        echo "### TFLint Results :mag:" > tflint_report.md
        echo "" >> tflint_report.md
        
        if [ $EXIT_CODE -eq 0 ]; then
          echo "✅ No issues found" >> tflint_report.md
        else
          ISSUES=$(echo "$OUTPUT" | jq -r '.issues | length')
          echo "⚠️ Found ${ISSUES} issue(s)" >> tflint_report.md
          echo "" >> tflint_report.md
          echo "$OUTPUT" | jq -r '.issues[] | "* **\(.rule.name)** in `\(.range.filename)`:\n  * \(.message)\n  * Line: \(.range.start.line)"' >> tflint_report.md
        fi
        
        # Save report content to environment variable
        echo "report<<EOF" >> $GITHUB_ENV
        cat tflint_report.md >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
        # Set exit code for later use
        echo "exit_code=$EXIT_CODE" >> $GITHUB_OUTPUT

    - name: Find and Update PR Comment
      run: |
        # Create new comment
        curl -s -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/pull/${{ github.event.pull_request.number }}/comments" \
          -d "{\"body\":$(echo "${{ env.report }}" | jq -R -s .)}"

    
    - name: Final Status Check
      if: always()
      run: |
        if [ "${{ env.tflint_exit_code }}" != "0" ]; then
          exit 1
        fi